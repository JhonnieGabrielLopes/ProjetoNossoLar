#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 297936 bytes. Error detail: Chunk::new
# Possible reasons:
#   The system is out of physical RAM or swap space
#   This process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Zero Based Compressed Oops mode in which the Java heap is
#     placed in the first 32GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 32GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (arena.cpp:149), pid=10568, tid=11604
#
# JRE version: Java(TM) SE Runtime Environment (23.0.1+11) (build 23.0.1+11-39)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (23.0.1+11-39, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: br.edu.iftm.sistemanossolar.view.Telas

Host: AMD Ryzen 5 PRO 4650U with Radeon Graphics, 12 cores, 13G,  Windows 11 , 64 bit Build 22000 (10.0.22000.2538)
Time: Thu Jun  5 22:35:10 2025 E. South America Standard Time elapsed time: 1.657933 seconds (0d 0h 0m 1s)

---------------  T H R E A D  ---------------

Current thread (0x0000026b7059e550):  JavaThread "C2 CompilerThread0" daemon [_thread_in_native, id=11604, stack(0x000000f1c0a00000,0x000000f1c0b00000) (1024K)]


Current CompileTask:
C2:1658 1644       4       sun.java2d.marlin.MarlinCache::copyAARowRLE_WithBlockFlags (733 bytes)

Stack: [0x000000f1c0a00000,0x000000f1c0b00000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x6e08b9]  (no source info available)
V  [jvm.dll+0x87dc83]  (no source info available)
V  [jvm.dll+0x88010e]  (no source info available)
V  [jvm.dll+0x8807e3]  (no source info available)
V  [jvm.dll+0x27aee6]  (no source info available)
V  [jvm.dll+0xbc06f]  (no source info available)
V  [jvm.dll+0xbc2cb]  (no source info available)
V  [jvm.dll+0x2ee94d]  (no source info available)
V  [jvm.dll+0x6063d9]  (no source info available)
V